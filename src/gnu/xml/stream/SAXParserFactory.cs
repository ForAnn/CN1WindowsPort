// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace gnu.xml.stream {
public class SAXParserFactory: global::javax.xml.parsers.SAXParserFactory {

static SAXParserFactory() {
    @static();
}

public static global::java.util.Set _fFEATURE_1NAMES;

public global::java.util.Map _ffeatures;

new public static void @static(){
//XMLVM_BEGIN_WRAPPER[gnu.xml.stream.SAXParserFactory: void <clinit>()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r0_o = new global::java.util.HashSet();
    ((global::java.util.HashSet) _r0_o).@this();
    global::gnu.xml.stream.SAXParserFactory._fFEATURE_1NAMES = (global::java.util.Set) _r0_o;
    _r0_o = global::gnu.xml.stream.SAXParserFactory._fFEATURE_1NAMES;
    // Value=http://xml.org/sax/features/namespaces
    _r1_o = new global::java.lang.String();
    ((global::java.lang.String)_r1_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)104)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 112)), unchecked((char) unchecked((uint) 58)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 120)), unchecked((char) unchecked((uint) 109)), unchecked((char) unchecked((uint) 108)), unchecked((char) unchecked((uint) 46)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 103)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 120)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 102)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 117)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 109)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 112)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 99)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 115))}));
    ((global::java.util.Set) _r0_o).add((global::java.lang.Object) _r1_o);
    _r0_o = global::gnu.xml.stream.SAXParserFactory._fFEATURE_1NAMES;
    // Value=http://xml.org/sax/features/string-interning
    _r1_o = new global::java.lang.String();
    ((global::java.lang.String)_r1_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)104)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 112)), unchecked((char) unchecked((uint) 58)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 120)), unchecked((char) unchecked((uint) 109)), unchecked((char) unchecked((uint) 108)), unchecked((char) unchecked((uint) 46)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 103)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 120)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 102)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 117)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 103)), unchecked((char) unchecked((uint) 45)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 103))}));
    ((global::java.util.Set) _r0_o).add((global::java.lang.Object) _r1_o);
    _r0_o = global::gnu.xml.stream.SAXParserFactory._fFEATURE_1NAMES;
    // Value=http://xml.org/sax/features/validation
    _r1_o = new global::java.lang.String();
    ((global::java.lang.String)_r1_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)104)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 112)), unchecked((char) unchecked((uint) 58)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 120)), unchecked((char) unchecked((uint) 109)), unchecked((char) unchecked((uint) 108)), unchecked((char) unchecked((uint) 46)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 103)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 120)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 102)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 117)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 47)), unchecked((char) unchecked((uint) 118)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 108)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 100)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 110))}));
    ((global::java.util.Set) _r0_o).add((global::java.lang.Object) _r1_o);
    return;
//XMLVM_END_WRAPPER[gnu.xml.stream.SAXParserFactory: void <clinit>()]
}

new public void @this(){
//XMLVM_BEGIN_WRAPPER[gnu.xml.stream.SAXParserFactory: void <init>()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    ((global::javax.xml.parsers.SAXParserFactory) _r1_o).@this();
    _r0_o = new global::java.util.HashMap();
    ((global::java.util.HashMap) _r0_o).@this();
    ((global::gnu.xml.stream.SAXParserFactory) _r1_o)._ffeatures = (global::java.util.Map) _r0_o;
    return;
//XMLVM_END_WRAPPER[gnu.xml.stream.SAXParserFactory: void <init>()]
}

public override global::System.Object newSAXParser(){
//XMLVM_BEGIN_WRAPPER[gnu.xml.stream.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r3_o = null;
    global::System.Object _r4_o = null;
    _r4_o = this;
    _r0.i = ((global::gnu.xml.stream.SAXParserFactory) _r4_o).isValidating() ? 1 : 0;
    _r1.i = ((global::gnu.xml.stream.SAXParserFactory) _r4_o).isNamespaceAware() ? 1 : 0;
    _r2.i = ((global::gnu.xml.stream.SAXParserFactory) _r4_o).isXIncludeAware() ? 1 : 0;
    _r3_o = new global::gnu.xml.stream.SAXParser();
    ((global::gnu.xml.stream.SAXParser) _r3_o).@this(0!=_r0.i, 0!=_r1.i, 0!=_r2.i);
    _r0_o = ((global::gnu.xml.stream.SAXParserFactory) _r4_o)._ffeatures;
    _r0_o = ((global::java.util.Map) _r0_o).entrySet();
    _r1_o = ((global::java.util.Set) _r0_o).iterator();
    label27:;
    _r0.i = ((global::java.util.Iterator) _r1_o).hasNext() ? 1 : 0;
    if (_r0.i != 0) goto label34;
    return (global::javax.xml.parsers.SAXParser) _r3_o;
    label34:;
    _r4_o = ((global::java.util.Iterator) _r1_o).next();
    _r0_o = ((global::java.util.Map_2Entry) _r4_o).getKey();
    _r4_o = ((global::java.util.Map_2Entry) _r4_o).getValue();
    _r2.i = ((global::java.lang.Boolean) _r4_o).booleanValue() ? 1 : 0;
    ((global::gnu.xml.stream.SAXParser) _r3_o).setFeature((global::java.lang.String) _r0_o, 0!=_r2.i);
    goto label27;
//XMLVM_END_WRAPPER[gnu.xml.stream.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()]
}

public override void setFeature(global::java.lang.String n1, bool n2){
//XMLVM_BEGIN_WRAPPER[gnu.xml.stream.SAXParserFactory: void setFeature(java.lang.String, boolean)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    _r2_o = this;
    _r3_o = n1;
    _r4.i = n2 ? 1 : 0;
    _r0_o = global::gnu.xml.stream.SAXParserFactory._fFEATURE_1NAMES;
    _r0.i = ((global::java.util.Set) _r0_o).contains((global::java.lang.Object) _r3_o) ? 1 : 0;
    if (_r0.i != 0) goto label14;
    _r0_o = new global::org.xml.sax.SAXNotSupportedException();
    ((global::org.xml.sax.SAXNotSupportedException) _r0_o).@this((global::java.lang.String) _r3_o);
    throw new global::org.xmlvm._nExceptionAdapter((global::org.xml.sax.SAXNotSupportedException) _r0_o);
    label14:;
    _r0_o = ((global::gnu.xml.stream.SAXParserFactory) _r2_o)._ffeatures;
    if (_r4.i == 0) goto label24;
    _r1_o = global::java.lang.Boolean._fTRUE;
    label20:;
    ((global::java.util.Map) _r0_o).put((global::java.lang.Object) _r3_o, (global::java.lang.Object) _r1_o);
    return;
    label24:;
    _r1_o = global::java.lang.Boolean._fFALSE;
    goto label20;
//XMLVM_END_WRAPPER[gnu.xml.stream.SAXParserFactory: void setFeature(java.lang.String, boolean)]
}

public override bool getFeature(global::java.lang.String n1){
//XMLVM_BEGIN_WRAPPER[gnu.xml.stream.SAXParserFactory: boolean getFeature(java.lang.String)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    _r1_o = this;
    _r2_o = n1;
    _r0_o = global::gnu.xml.stream.SAXParserFactory._fFEATURE_1NAMES;
    _r0.i = ((global::java.util.Set) _r0_o).contains((global::java.lang.Object) _r2_o) ? 1 : 0;
    if (_r0.i != 0) goto label14;
    _r0_o = new global::org.xml.sax.SAXNotSupportedException();
    ((global::org.xml.sax.SAXNotSupportedException) _r0_o).@this((global::java.lang.String) _r2_o);
    throw new global::org.xmlvm._nExceptionAdapter((global::org.xml.sax.SAXNotSupportedException) _r0_o);
    label14:;
    _r0_o = ((global::gnu.xml.stream.SAXParserFactory) _r1_o)._ffeatures;
    _r1_o = ((global::java.util.Map) _r0_o).get((global::java.lang.Object) _r2_o);
    if (_r1_o != null) goto label26;
    _r0.i = 0;
    label25:;
    return _r0.i!=0;
    label26:;
    _r0.i = ((global::java.lang.Boolean) _r1_o).booleanValue() ? 1 : 0;
    goto label25;
//XMLVM_END_WRAPPER[gnu.xml.stream.SAXParserFactory: boolean getFeature(java.lang.String)]
}

//XMLVM_BEGIN_WRAPPER[gnu.xml.stream.SAXParserFactory]
//XMLVM_END_WRAPPER[gnu.xml.stream.SAXParserFactory]

} // end of class: SAXParserFactory

} // end of namespace: gnu.xml.stream
