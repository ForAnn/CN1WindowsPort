// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.io {
public class FileDescriptor: global::java.lang.Object {

static FileDescriptor() {
    @static();
}

public static global::java.io.FileDescriptor _fin;

public static global::java.io.FileDescriptor _fout;

public static global::java.io.FileDescriptor _ferr;

public long _fdescriptor;

public bool _freadOnly;

new public static void @static(){
//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor: void <clinit>()]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    _r0_o = new global::java.io.FileDescriptor();
    ((global::java.io.FileDescriptor) _r0_o).@this();
    global::java.io.FileDescriptor._fin = (global::java.io.FileDescriptor) _r0_o;
    _r0_o = new global::java.io.FileDescriptor();
    ((global::java.io.FileDescriptor) _r0_o).@this();
    global::java.io.FileDescriptor._fout = (global::java.io.FileDescriptor) _r0_o;
    _r0_o = new global::java.io.FileDescriptor();
    ((global::java.io.FileDescriptor) _r0_o).@this();
    global::java.io.FileDescriptor._ferr = (global::java.io.FileDescriptor) _r0_o;
    _r0_o = global::java.io.FileDescriptor._fin;
    _r1.l = 0L;
    ((global::java.io.FileDescriptor) _r0_o)._fdescriptor = _r1.l;
    _r0_o = global::java.io.FileDescriptor._fout;
    _r1.l = 1L;
    ((global::java.io.FileDescriptor) _r0_o)._fdescriptor = _r1.l;
    _r0_o = global::java.io.FileDescriptor._ferr;
    _r1.l = 2L;
    ((global::java.io.FileDescriptor) _r0_o)._fdescriptor = _r1.l;
    global::java.io.FileDescriptor.oneTimeInitialization();
    return;
//XMLVM_END_WRAPPER[java.io.FileDescriptor: void <clinit>()]
}

private static void oneTimeInitialization(){
//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor: void oneTimeInitialization()]
      //Do nothing
//XMLVM_END_WRAPPER[java.io.FileDescriptor: void oneTimeInitialization()]
}

new public void @this(){
//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor: void <init>()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r2_o = null;
    _r2_o = this;
    ((global::java.lang.Object) _r2_o).@this();
    _r0.l = -1L;
    ((global::java.io.FileDescriptor) _r2_o)._fdescriptor = _r0.l;
    _r0.i = 0;
    ((global::java.io.FileDescriptor) _r2_o)._freadOnly = 0!=_r0.i;
    return;
//XMLVM_END_WRAPPER[java.io.FileDescriptor: void <init>()]
}

public virtual void sync(){
//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor: void sync()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.io.FileDescriptor) _r1_o)._freadOnly ? 1 : 0;
    if (_r0.i != 0) goto label7;
    ((global::java.io.FileDescriptor) _r1_o).syncImpl();
    label7:;
    return;
//XMLVM_END_WRAPPER[java.io.FileDescriptor: void sync()]
}

private void syncImpl(){
//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor: void syncImpl()]
      throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
//XMLVM_END_WRAPPER[java.io.FileDescriptor: void syncImpl()]
}

public virtual bool valid(){
//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor: boolean valid()]
    global::org.xmlvm._nElement _r0;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r4_o = null;
    _r4_o = this;
    _r0.l = ((global::java.io.FileDescriptor) _r4_o)._fdescriptor;
    _r2.l = -1L;
    _r0.i = _r0.l > _r2.l ? 1 : (_r0.l == _r2.l ? 0 : -1);
    if (_r0.i == 0) goto label10;
    _r0.i = 1;
    label9:;
    return _r0.i!=0;
    label10:;
    _r0.i = 0;
    goto label9;
//XMLVM_END_WRAPPER[java.io.FileDescriptor: boolean valid()]
}

//XMLVM_BEGIN_WRAPPER[java.io.FileDescriptor]
//XMLVM_END_WRAPPER[java.io.FileDescriptor]

} // end of class: FileDescriptor

} // end of namespace: java.io
