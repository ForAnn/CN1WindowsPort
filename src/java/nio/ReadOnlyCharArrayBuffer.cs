// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.nio {
public class ReadOnlyCharArrayBuffer: global::java.nio.CharArrayBuffer {
public static global::System.Object copy(global::java.nio.CharArrayBuffer n1, int n2){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.ReadOnlyCharArrayBuffer copy(java.nio.CharArrayBuffer, int)]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    _r4_o = n1;
    _r5.i = n2;
    _r0_o = new global::java.nio.ReadOnlyCharArrayBuffer();
    _r1.i = ((global::java.nio.CharArrayBuffer) _r4_o).capacity();
    _r2_o = ((global::java.nio.CharArrayBuffer) _r4_o)._fbackingArray;
    _r3.i = ((global::java.nio.CharArrayBuffer) _r4_o)._foffset;
    ((global::java.nio.ReadOnlyCharArrayBuffer) _r0_o).@this((int) _r1.i, (global::org.xmlvm._nArrayAdapter<char>) _r2_o, (int) _r3.i);
    _r1.i = ((global::java.nio.CharArrayBuffer) _r4_o).limit();
    ((global::java.nio.ReadOnlyCharArrayBuffer) _r0_o)._flimit = _r1.i;
    _r1.i = ((global::java.nio.CharArrayBuffer) _r4_o).position();
    ((global::java.nio.ReadOnlyCharArrayBuffer) _r0_o)._fposition = _r1.i;
    ((global::java.nio.ReadOnlyCharArrayBuffer) _r0_o)._fmark = _r5.i;
    return (global::java.nio.ReadOnlyCharArrayBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.ReadOnlyCharArrayBuffer copy(java.nio.CharArrayBuffer, int)]
}

public void @this(int n1, global::org.xmlvm._nArrayAdapter<char> n2, int n3){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: void <init>(int, char[], int)]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    _r0_o = this;
    _r1.i = n1;
    _r2_o = n2;
    _r3.i = n3;
    ((global::java.nio.CharArrayBuffer) _r0_o).@this((int) _r1.i, (global::org.xmlvm._nArrayAdapter<char>) _r2_o, (int) _r3.i);
    return;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: void <init>(int, char[], int)]
}

public override global::System.Object asReadOnlyBuffer(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer asReadOnlyBuffer()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = ((global::java.nio.ReadOnlyCharArrayBuffer) _r1_o).duplicate();
    return (global::java.nio.CharBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer asReadOnlyBuffer()]
}

public override global::System.Object compact(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer compact()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer compact()]
}

public override global::System.Object duplicate(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer duplicate()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.ReadOnlyCharArrayBuffer) _r1_o)._fmark;
    _r0_o = global::java.nio.ReadOnlyCharArrayBuffer.copy((global::java.nio.CharArrayBuffer) _r1_o, (int) _r0.i);
    return (global::java.nio.CharBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer duplicate()]
}

public override bool isReadOnly(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: boolean isReadOnly()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 1;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: boolean isReadOnly()]
}

public override global::System.Object protectedArray(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: char[] protectedArray()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: char[] protectedArray()]
}

public override int protectedArrayOffset(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: int protectedArrayOffset()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: int protectedArrayOffset()]
}

public override bool protectedHasArray(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: boolean protectedHasArray()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: boolean protectedHasArray()]
}

public override global::System.Object put(char n1){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(char)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = this;
    _r2.i = n1;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(char)]
}

public override global::System.Object put(int n1, char n2){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(int, char)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::org.xmlvm._nElement _r3;
    _r1_o = this;
    _r2.i = n1;
    _r3.i = n2;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(int, char)]
}

public override global::System.Object put(global::org.xmlvm._nArrayAdapter<char> n1, int n2, int n3){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(char[], int, int)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::org.xmlvm._nElement _r4;
    _r1_o = this;
    _r2_o = n1;
    _r3.i = n2;
    _r4.i = n3;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(char[], int, int)]
}

public override global::System.Object put(global::java.nio.CharBuffer n1){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    _r1_o = this;
    _r2_o = n1;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)]
}

public override global::System.Object put(global::java.lang.String n1, int n2, int n3){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(java.lang.String, int, int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r4_o = null;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::org.xmlvm._nElement _r7;
    _r4_o = this;
    _r5_o = n1;
    _r6.i = n2;
    _r7.i = n3;
    if (_r6.i < 0) goto label16;
    if (_r7.i < 0) goto label16;
    _r0.l = (long) _r6.i;
    _r2.l = (long) _r7.i;
    _r0.l = _r0.l + _r2.l;
    _r2.i = ((global::java.lang.String) _r5_o).length();
    _r2.l = (long) _r2.i;
    _r0.i = _r0.l > _r2.l ? 1 : (_r0.l == _r2.l ? 0 : -1);
    if (_r0.i <= 0) goto label22;
    label16:;
    _r0_o = new global::java.lang.IndexOutOfBoundsException();
    ((global::java.lang.IndexOutOfBoundsException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.IndexOutOfBoundsException) _r0_o);
    label22:;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer put(java.lang.String, int, int)]
}

public override global::System.Object slice(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer slice()]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r5_o = null;
    _r5_o = this;
    _r0_o = new global::java.nio.ReadOnlyCharArrayBuffer();
    _r1.i = ((global::java.nio.ReadOnlyCharArrayBuffer) _r5_o).remaining();
    _r2_o = ((global::java.nio.ReadOnlyCharArrayBuffer) _r5_o)._fbackingArray;
    _r3.i = ((global::java.nio.ReadOnlyCharArrayBuffer) _r5_o)._foffset;
    _r4.i = ((global::java.nio.ReadOnlyCharArrayBuffer) _r5_o)._fposition;
    _r3.i = _r3.i + _r4.i;
    ((global::java.nio.ReadOnlyCharArrayBuffer) _r0_o).@this((int) _r1.i, (global::org.xmlvm._nArrayAdapter<char>) _r2_o, (int) _r3.i);
    return (global::java.nio.CharBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer: java.nio.CharBuffer slice()]
}

//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyCharArrayBuffer]
//XMLVM_END_WRAPPER[java.nio.ReadOnlyCharArrayBuffer]

} // end of class: ReadOnlyCharArrayBuffer

} // end of namespace: java.nio
