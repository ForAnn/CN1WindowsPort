// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.nio {
public class ReadOnlyIntArrayBuffer: global::java.nio.IntArrayBuffer {
public static global::System.Object copy(global::java.nio.IntArrayBuffer n1, int n2){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.ReadOnlyIntArrayBuffer copy(java.nio.IntArrayBuffer, int)]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    _r4_o = n1;
    _r5.i = n2;
    _r0_o = new global::java.nio.ReadOnlyIntArrayBuffer();
    _r1.i = ((global::java.nio.IntArrayBuffer) _r4_o).capacity();
    _r2_o = ((global::java.nio.IntArrayBuffer) _r4_o)._fbackingArray;
    _r3.i = ((global::java.nio.IntArrayBuffer) _r4_o)._foffset;
    ((global::java.nio.ReadOnlyIntArrayBuffer) _r0_o).@this((int) _r1.i, (global::org.xmlvm._nArrayAdapter<int>) _r2_o, (int) _r3.i);
    _r1.i = ((global::java.nio.IntArrayBuffer) _r4_o).limit();
    ((global::java.nio.ReadOnlyIntArrayBuffer) _r0_o)._flimit = _r1.i;
    _r1.i = ((global::java.nio.IntArrayBuffer) _r4_o).position();
    ((global::java.nio.ReadOnlyIntArrayBuffer) _r0_o)._fposition = _r1.i;
    ((global::java.nio.ReadOnlyIntArrayBuffer) _r0_o)._fmark = _r5.i;
    return (global::java.nio.ReadOnlyIntArrayBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.ReadOnlyIntArrayBuffer copy(java.nio.IntArrayBuffer, int)]
}

public void @this(int n1, global::org.xmlvm._nArrayAdapter<int> n2, int n3){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: void <init>(int, int[], int)]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    _r0_o = this;
    _r1.i = n1;
    _r2_o = n2;
    _r3.i = n3;
    ((global::java.nio.IntArrayBuffer) _r0_o).@this((int) _r1.i, (global::org.xmlvm._nArrayAdapter<int>) _r2_o, (int) _r3.i);
    return;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: void <init>(int, int[], int)]
}

public override global::System.Object asReadOnlyBuffer(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer asReadOnlyBuffer()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = ((global::java.nio.ReadOnlyIntArrayBuffer) _r1_o).duplicate();
    return (global::java.nio.IntBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer asReadOnlyBuffer()]
}

public override global::System.Object compact(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer compact()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer compact()]
}

public override global::System.Object duplicate(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer duplicate()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.ReadOnlyIntArrayBuffer) _r1_o)._fmark;
    _r0_o = global::java.nio.ReadOnlyIntArrayBuffer.copy((global::java.nio.IntArrayBuffer) _r1_o, (int) _r0.i);
    return (global::java.nio.IntBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer duplicate()]
}

public override bool isReadOnly(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: boolean isReadOnly()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 1;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: boolean isReadOnly()]
}

public override global::System.Object protectedArray(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: int[] protectedArray()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: int[] protectedArray()]
}

public override int protectedArrayOffset(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: int protectedArrayOffset()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: int protectedArrayOffset()]
}

public override bool protectedHasArray(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: boolean protectedHasArray()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: boolean protectedHasArray()]
}

public override global::System.Object put(int n1){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(int)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = this;
    _r2.i = n1;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(int)]
}

public override global::System.Object put(int n1, int n2){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(int, int)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::org.xmlvm._nElement _r3;
    _r1_o = this;
    _r2.i = n1;
    _r3.i = n2;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(int, int)]
}

public override global::System.Object put(global::java.nio.IntBuffer n1){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    _r1_o = this;
    _r2_o = n1;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)]
}

public override global::System.Object put(global::org.xmlvm._nArrayAdapter<int> n1, int n2, int n3){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(int[], int, int)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::org.xmlvm._nElement _r4;
    _r1_o = this;
    _r2_o = n1;
    _r3.i = n2;
    _r4.i = n3;
    _r0_o = new global::java.nio.ReadOnlyBufferException();
    ((global::java.nio.ReadOnlyBufferException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.nio.ReadOnlyBufferException) _r0_o);
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer put(int[], int, int)]
}

public override global::System.Object slice(){
//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer slice()]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r5_o = null;
    _r5_o = this;
    _r0_o = new global::java.nio.ReadOnlyIntArrayBuffer();
    _r1.i = ((global::java.nio.ReadOnlyIntArrayBuffer) _r5_o).remaining();
    _r2_o = ((global::java.nio.ReadOnlyIntArrayBuffer) _r5_o)._fbackingArray;
    _r3.i = ((global::java.nio.ReadOnlyIntArrayBuffer) _r5_o)._foffset;
    _r4.i = ((global::java.nio.ReadOnlyIntArrayBuffer) _r5_o)._fposition;
    _r3.i = _r3.i + _r4.i;
    ((global::java.nio.ReadOnlyIntArrayBuffer) _r0_o).@this((int) _r1.i, (global::org.xmlvm._nArrayAdapter<int>) _r2_o, (int) _r3.i);
    return (global::java.nio.IntBuffer) _r0_o;
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer: java.nio.IntBuffer slice()]
}

//XMLVM_BEGIN_WRAPPER[java.nio.ReadOnlyIntArrayBuffer]
//XMLVM_END_WRAPPER[java.nio.ReadOnlyIntArrayBuffer]

} // end of class: ReadOnlyIntArrayBuffer

} // end of namespace: java.nio
