// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.nio.channels.spi {
public abstract class AbstractInterruptibleChannel: global::java.lang.Object,global::java.nio.channels.Channel,global::java.nio.channels.InterruptibleChannel {

static AbstractInterruptibleChannel() {
    @static();
}

public static global::java.lang.reflect.Method _fsetInterruptAction;

private bool _fclosed;

public bool _finterrupted;

new public static void @static(){
//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void <clinit>()]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r0_o = null;
    global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction = (global::java.lang.reflect.Method) _r0_o;
    try {
    _r0_o = new global::java.nio.channels.spi.AbstractInterruptibleChannel_21();
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel_21) _r0_o).@this();
    _r0_o = global::java.security.AccessController.doPrivileged((global::java.security.PrivilegedExceptionAction) _r0_o);
    global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction = (global::java.lang.reflect.Method) _r0_o;
    _r0_o = global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction;
    _r1.i = 1;
    ((global::java.lang.reflect.Method) _r0_o).setAccessible(0!=_r1.i);
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.security.PrivilegedActionException) {
            _ex = ex;
            goto label23;
        }
        throw ex;
    } // end catch
    label22:;
    return;
    label23:;
    _r0_o = _ex.getJavaException();
    _ex = null;
    goto label22;
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void <clinit>()]
}

new public void @this(){
//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 0;
    ((global::java.lang.Object) _r1_o).@this();
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o)._fclosed = 0!=_r0.i;
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o)._finterrupted = 0!=_r0.i;
    return;
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void <init>()]
}

public virtual bool isOpen(){
//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    global::System.Threading.Monitor.Enter(_r1_o);
    try {
    _r0.i = ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o)._fclosed ? 1 : 0;
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Object) {
            _ex = ex;
            goto label10;
        }
        throw ex;
    } // end catch
    if (_r0.i == 0) goto label8;
    _r0.i = 0;
    label6:;
    global::System.Threading.Monitor.Exit(_r1_o);
    return _r0.i!=0;
    label8:;
    _r0.i = 1;
    goto label6;
    label10:;
    _r0_o = _ex.getJavaException();
    _ex = null;
    global::System.Threading.Monitor.Exit(_r1_o);
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.Throwable) _r0_o);
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: boolean isOpen()]
}

public virtual void close(){
//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void close()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o)._fclosed ? 1 : 0;
    if (_r0.i != 0) goto label16;
    global::System.Threading.Monitor.Enter(_r1_o);
    try {
    _r0.i = ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o)._fclosed ? 1 : 0;
    if (_r0.i != 0) goto label15;
    _r0.i = 1;
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o)._fclosed = 0!=_r0.i;
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r1_o).implCloseChannel();
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Object) {
            _ex = ex;
            goto label17;
        }
        throw ex;
    } // end catch
    label15:;
    try {
    global::System.Threading.Monitor.Exit(_r1_o);
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Object) {
            _ex = ex;
            goto label17;
        }
        throw ex;
    } // end catch
    label16:;
    try {
    return;
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Object) {
            _ex = ex;
            goto label17;
        }
        throw ex;
    } // end catch
    label17:;
    try {
    _r0_o = _ex.getJavaException();
    _ex = null;
    global::System.Threading.Monitor.Exit(_r1_o);
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Object) {
            _ex = ex;
            goto label17;
        }
        throw ex;
    } // end catch
    throw new global::org.xmlvm._nExceptionAdapter((global::System.Object) _r0_o);
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void close()]
}

public virtual void begin(){
//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void begin()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r4_o = null;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r5_o = this;
    _r0_o = global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction;
    if (_r0_o == null) goto label24;
    try {
    _r0_o = global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction;
    _r1_o = global::java.lang.Thread.currentThread();
    _r2.i = 1;
    _r2_o = new global::org.xmlvm._nArrayAdapter<global::System.Object>(new global::System.Object[_r2.i]);
    _r3.i = 0;
    _r4_o = new global::java.nio.channels.spi.AbstractInterruptibleChannel_22();
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel_22) _r4_o).@this((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r5_o);
    ((global::org.xmlvm._nArrayAdapter<global::System.Object>) _r2_o)[_r3.i] = _r4_o;
    ((global::java.lang.reflect.Method) _r0_o).invoke((global::java.lang.Object) _r1_o, (global::org.xmlvm._nArrayAdapter<global::System.Object>) _r2_o);
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Exception) {
            _ex = ex;
            goto label25;
        }
        throw ex;
    } // end catch
    label24:;
    return;
    label25:;
    _r0_o = _ex.getJavaException();
    _ex = null;
    _r1_o = new global::java.lang.RuntimeException();
    ((global::java.lang.RuntimeException) _r1_o).@this((global::java.lang.Throwable) _r0_o);
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.RuntimeException) _r1_o);
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void begin()]
}

public virtual void end(bool n1){
//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r3_o = this;
    _r4.i = n1 ? 1 : 0;
    _r0_o = global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction;
    if (_r0_o == null) goto label36;
    try {
    _r0_o = global::java.nio.channels.spi.AbstractInterruptibleChannel._fsetInterruptAction;
    _r1_o = global::java.lang.Thread.currentThread();
    _r2.i = 1;
    _r2_o = new global::org.xmlvm._nArrayAdapter<global::System.Object>(new global::System.Object[_r2.i]);
    ((global::java.lang.reflect.Method) _r0_o).invoke((global::java.lang.Object) _r1_o, (global::org.xmlvm._nArrayAdapter<global::System.Object>) _r2_o);
    }
    catch (global::System.Exception e) {
 global::org.xmlvm._nExceptionAdapter ex = e as global::org.xmlvm._nExceptionAdapter ?? new global::org.xmlvm._nExceptionAdapter(e.ToString(), e.ToJavaException());
        global::System.Object _java_exception = ex.getJavaException();
        if (_java_exception is global::java.lang.Exception) {
            _ex = ex;
            goto label29;
        }
        throw ex;
    } // end catch
    _r0.i = ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r3_o)._finterrupted ? 1 : 0;
    if (_r0.i == 0) goto label36;
    _r0.i = 0;
    ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r3_o)._finterrupted = 0!=_r0.i;
// Red class access removed: java.nio.channels.ClosedByInterruptException new-instance
throw new global::org.xmlvm._nNotYetImplementedException("Red class access removed: java.nio.channels.ClosedByInterruptException new-instance");
// Red class access removed: java.nio.channels.ClosedByInterruptException <init>
throw new global::org.xmlvm._nNotYetImplementedException("Red class access removed: java.nio.channels.ClosedByInterruptException <init>");
    throw new global::org.xmlvm._nExceptionAdapter(new global::org.xmlvm.runtime.RedTypeMarker());
    label29:;
    _r0_o = _ex.getJavaException();
    _ex = null;
    _r1_o = new global::java.lang.RuntimeException();
    ((global::java.lang.RuntimeException) _r1_o).@this((global::java.lang.Throwable) _r0_o);
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.RuntimeException) _r1_o);
    label36:;
    if (_r4.i != 0) goto label48;
    _r0.i = ((global::java.nio.channels.spi.AbstractInterruptibleChannel) _r3_o)._fclosed ? 1 : 0;
    if (_r0.i == 0) goto label48;
// Red class access removed: java.nio.channels.AsynchronousCloseException new-instance
throw new global::org.xmlvm._nNotYetImplementedException("Red class access removed: java.nio.channels.AsynchronousCloseException new-instance");
// Red class access removed: java.nio.channels.AsynchronousCloseException <init>
throw new global::org.xmlvm._nNotYetImplementedException("Red class access removed: java.nio.channels.AsynchronousCloseException <init>");
    throw new global::org.xmlvm._nExceptionAdapter(new global::org.xmlvm.runtime.RedTypeMarker());
    label48:;
    return;
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)]
}

public abstract void implCloseChannel();

//XMLVM_BEGIN_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel]
//XMLVM_END_WRAPPER[java.nio.channels.spi.AbstractInterruptibleChannel]

} // end of class: AbstractInterruptibleChannel

} // end of namespace: java.nio.channels.spi
