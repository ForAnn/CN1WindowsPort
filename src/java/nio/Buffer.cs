// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.nio {
public abstract class Buffer: global::java.lang.Object {
public static int _fUNSET_1MARK = -1;

public int _fcapacity;

public int _flimit;

public int _fmark;

public int _fposition;

public void @this(int n1){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: void <init>(int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = this;
    _r2.i = n1;
    ((global::java.lang.Object) _r1_o).@this();
    _r0.i = -1;
    ((global::java.nio.Buffer) _r1_o)._fmark = _r0.i;
    _r0.i = 0;
    ((global::java.nio.Buffer) _r1_o)._fposition = _r0.i;
    if (_r2.i >= 0) goto label17;
    _r0_o = new global::java.lang.IllegalArgumentException();
    ((global::java.lang.IllegalArgumentException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.IllegalArgumentException) _r0_o);
    label17:;
    ((global::java.nio.Buffer) _r1_o)._flimit = _r2.i;
    ((global::java.nio.Buffer) _r1_o)._fcapacity = _r2.i;
    return;
//XMLVM_END_WRAPPER[java.nio.Buffer: void <init>(int)]
}

public abstract global::System.Object array();

public abstract int arrayOffset();

public virtual int capacity(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: int capacity()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.Buffer) _r1_o)._fcapacity;
    return _r0.i;
//XMLVM_END_WRAPPER[java.nio.Buffer: int capacity()]
}

public virtual global::System.Object clear(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer clear()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 0;
    ((global::java.nio.Buffer) _r1_o)._fposition = _r0.i;
    _r0.i = -1;
    ((global::java.nio.Buffer) _r1_o)._fmark = _r0.i;
    _r0.i = ((global::java.nio.Buffer) _r1_o)._fcapacity;
    ((global::java.nio.Buffer) _r1_o)._flimit = _r0.i;
    return (global::java.nio.Buffer) _r1_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer clear()]
}

public virtual global::System.Object flip(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer flip()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.Buffer) _r1_o)._fposition;
    ((global::java.nio.Buffer) _r1_o)._flimit = _r0.i;
    _r0.i = 0;
    ((global::java.nio.Buffer) _r1_o)._fposition = _r0.i;
    _r0.i = -1;
    ((global::java.nio.Buffer) _r1_o)._fmark = _r0.i;
    return (global::java.nio.Buffer) _r1_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer flip()]
}

public abstract bool hasArray();

public virtual bool hasRemaining(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: boolean hasRemaining()]
    global::org.xmlvm._nElement _r0;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    _r2_o = this;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fposition;
    _r1.i = ((global::java.nio.Buffer) _r2_o)._flimit;
    if (_r0.i >= _r1.i) goto label8;
    _r0.i = 1;
    label7:;
    return _r0.i!=0;
    label8:;
    _r0.i = 0;
    goto label7;
//XMLVM_END_WRAPPER[java.nio.Buffer: boolean hasRemaining()]
}

public abstract bool isDirect();

public abstract bool isReadOnly();

public virtual int limit(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: int limit()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.Buffer) _r1_o)._flimit;
    return _r0.i;
//XMLVM_END_WRAPPER[java.nio.Buffer: int limit()]
}

public virtual global::System.Object limit(int n1){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer limit(int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    _r2_o = this;
    _r3.i = n1;
    _r1.i = -1;
    if (_r3.i < 0) goto label7;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fcapacity;
    if (_r3.i <= _r0.i) goto label13;
    label7:;
    _r0_o = new global::java.lang.IllegalArgumentException();
    ((global::java.lang.IllegalArgumentException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.IllegalArgumentException) _r0_o);
    label13:;
    ((global::java.nio.Buffer) _r2_o)._flimit = _r3.i;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fposition;
    if (_r0.i <= _r3.i) goto label21;
    ((global::java.nio.Buffer) _r2_o)._fposition = _r3.i;
    label21:;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fmark;
    if (_r0.i == _r1.i) goto label31;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fmark;
    if (_r0.i <= _r3.i) goto label31;
    ((global::java.nio.Buffer) _r2_o)._fmark = _r1.i;
    label31:;
    return (global::java.nio.Buffer) _r2_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer limit(int)]
}

public virtual global::System.Object mark(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer mark()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.Buffer) _r1_o)._fposition;
    ((global::java.nio.Buffer) _r1_o)._fmark = _r0.i;
    return (global::java.nio.Buffer) _r1_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer mark()]
}

public virtual int position(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: int position()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.nio.Buffer) _r1_o)._fposition;
    return _r0.i;
//XMLVM_END_WRAPPER[java.nio.Buffer: int position()]
}

public virtual global::System.Object position(int n1){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer position(int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    _r3_o = this;
    _r4.i = n1;
    _r2.i = -1;
    if (_r4.i < 0) goto label7;
    _r0.i = ((global::java.nio.Buffer) _r3_o)._flimit;
    if (_r4.i <= _r0.i) goto label13;
    label7:;
    _r0_o = new global::java.lang.IllegalArgumentException();
    ((global::java.lang.IllegalArgumentException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.IllegalArgumentException) _r0_o);
    label13:;
    ((global::java.nio.Buffer) _r3_o)._fposition = _r4.i;
    _r0.i = ((global::java.nio.Buffer) _r3_o)._fmark;
    if (_r0.i == _r2.i) goto label27;
    _r0.i = ((global::java.nio.Buffer) _r3_o)._fmark;
    _r1.i = ((global::java.nio.Buffer) _r3_o)._fposition;
    if (_r0.i <= _r1.i) goto label27;
    ((global::java.nio.Buffer) _r3_o)._fmark = _r2.i;
    label27:;
    return (global::java.nio.Buffer) _r3_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer position(int)]
}

public virtual int remaining(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: int remaining()]
    global::org.xmlvm._nElement _r0;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    _r2_o = this;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._flimit;
    _r1.i = ((global::java.nio.Buffer) _r2_o)._fposition;
    _r0.i = _r0.i - _r1.i;
    return _r0.i;
//XMLVM_END_WRAPPER[java.nio.Buffer: int remaining()]
}

public virtual global::System.Object reset(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer reset()]
    global::org.xmlvm._nElement _r0;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    _r2_o = this;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fmark;
    _r1.i = -1;
    if (_r0.i != _r1.i) goto label11;
// Red class access removed: java.nio.InvalidMarkException new-instance
throw new global::org.xmlvm._nNotYetImplementedException("Red class access removed: java.nio.InvalidMarkException new-instance");
// Red class access removed: java.nio.InvalidMarkException <init>
throw new global::org.xmlvm._nNotYetImplementedException("Red class access removed: java.nio.InvalidMarkException <init>");
    throw new global::org.xmlvm._nExceptionAdapter(new global::org.xmlvm.runtime.RedTypeMarker());
    label11:;
    _r0.i = ((global::java.nio.Buffer) _r2_o)._fmark;
    ((global::java.nio.Buffer) _r2_o)._fposition = _r0.i;
    return (global::java.nio.Buffer) _r2_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer reset()]
}

public virtual global::System.Object rewind(){
//XMLVM_BEGIN_WRAPPER[java.nio.Buffer: java.nio.Buffer rewind()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 0;
    ((global::java.nio.Buffer) _r1_o)._fposition = _r0.i;
    _r0.i = -1;
    ((global::java.nio.Buffer) _r1_o)._fmark = _r0.i;
    return (global::java.nio.Buffer) _r1_o;
//XMLVM_END_WRAPPER[java.nio.Buffer: java.nio.Buffer rewind()]
}

//XMLVM_BEGIN_WRAPPER[java.nio.Buffer]
//XMLVM_END_WRAPPER[java.nio.Buffer]

} // end of class: Buffer

} // end of namespace: java.nio
