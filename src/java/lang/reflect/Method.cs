// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.lang.reflect {
public class Method: global::java.lang.reflect.AccessibleObject,global::java.lang.reflect.GenericDeclaration,global::java.lang.reflect.Member {
private global::java.lang.String _fname;

private global::java.lang.Class _fclazz;

private global::java.lang.Object _faddress;

private int _fslot;

private global::org.xmlvm._nArrayAdapter<global::System.Object> _fparameterTypes;

private global::org.xmlvm._nArrayAdapter<global::System.Object> _fexceptionTypes;

private int _fmodifiers;

private global::java.lang.String _fsignature;

private global::org.xmlvm._nArrayAdapter<sbyte> _fannotations;

private global::org.xmlvm._nArrayAdapter<sbyte> _fparameterAnnotations;

public static int _fPUBLIC = java.lang.reflect._iMember._fPUBLIC;

public static int _fDECLARED = java.lang.reflect._iMember._fDECLARED;

new private void @this(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: void <init>()]
    global::System.Object _r0_o = null;
    _r0_o = this;
    ((global::java.lang.reflect.AccessibleObject) _r0_o).@this();
    return;
//XMLVM_END_WRAPPER[java.lang.reflect.Method: void <init>()]
}

private void @this(global::java.lang.String n1, global::java.lang.Class n2, global::org.xmlvm._nArrayAdapter<global::System.Object> n3, global::org.xmlvm._nArrayAdapter<global::System.Object> n4, int n5, global::java.lang.Object n6, int n7, global::java.lang.String n8, global::org.xmlvm._nArrayAdapter<sbyte> n9, global::org.xmlvm._nArrayAdapter<sbyte> n10){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: void <init>(java.lang.String, java.lang.Class, java.lang.Class[], java.lang.Class[], int, java.lang.Object, int, java.lang.String, byte[], byte[])]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nElement _r7;
    global::System.Object _r8_o = null;
    global::System.Object _r9_o = null;
    global::System.Object _r10_o = null;
    _r0_o = this;
    _r1_o = n1;
    _r2_o = n2;
    _r3_o = n3;
    _r4_o = n4;
    _r5.i = n5;
    _r6_o = n6;
    _r7.i = n7;
    _r8_o = n8;
    _r9_o = n9;
    _r10_o = n10;
    ((global::java.lang.reflect.AccessibleObject) _r0_o).@this();
    ((global::java.lang.reflect.Method) _r0_o)._fname = (global::java.lang.String) _r1_o;
    ((global::java.lang.reflect.Method) _r0_o)._fclazz = (global::java.lang.Class) _r2_o;
    ((global::java.lang.reflect.Method) _r0_o)._fparameterTypes = (global::org.xmlvm._nArrayAdapter<global::System.Object>) _r3_o;
    ((global::java.lang.reflect.Method) _r0_o)._fexceptionTypes = (global::org.xmlvm._nArrayAdapter<global::System.Object>) _r4_o;
    ((global::java.lang.reflect.Method) _r0_o)._fmodifiers = _r5.i;
    ((global::java.lang.reflect.Method) _r0_o)._faddress = (global::java.lang.Object) _r6_o;
    ((global::java.lang.reflect.Method) _r0_o)._fslot = _r7.i;
    ((global::java.lang.reflect.Method) _r0_o)._fsignature = (global::java.lang.String) _r8_o;
    ((global::java.lang.reflect.Method) _r0_o)._fannotations = (global::org.xmlvm._nArrayAdapter<sbyte>) _r9_o;
    ((global::java.lang.reflect.Method) _r0_o)._fparameterAnnotations = (global::org.xmlvm._nArrayAdapter<sbyte>) _r10_o;
    return;
//XMLVM_END_WRAPPER[java.lang.reflect.Method: void <init>(java.lang.String, java.lang.Class, java.lang.Class[], java.lang.Class[], int, java.lang.Object, int, java.lang.String, byte[], byte[])]
}

public virtual global::System.Object getTypeParameters(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()]
}

public virtual global::System.Object toGenericString(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.String toGenericString()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.String toGenericString()]
}

public virtual global::System.Object getGenericParameterTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()]
}

public virtual global::System.Object getGenericExceptionTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.reflect.Type[] getGenericExceptionTypes()]
}

public virtual global::System.Object getGenericReturnType(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()]
}

public virtual global::System.Object getParameterAnnotations(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()]
}

public virtual bool isVarArgs(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: boolean isVarArgs()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: boolean isVarArgs()]
}

public virtual bool isBridge(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: boolean isBridge()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: boolean isBridge()]
}

public virtual bool isSynthetic(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: boolean isSynthetic()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: boolean isSynthetic()]
}

public virtual global::System.Object getDefaultValue(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.Object getDefaultValue()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.Object getDefaultValue()]
}

public override bool equals(global::java.lang.Object n1){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: boolean equals(java.lang.Object)]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: boolean equals(java.lang.Object)]
}

public virtual global::System.Object getDeclaringClass(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.Class getDeclaringClass()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.Class getDeclaringClass()]
}

public virtual global::System.Object getExceptionTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()]
}

public override int getModifiers(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: int getModifiers()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.lang.reflect.Method) _r1_o)._fmodifiers;
    return _r0.i;
//XMLVM_END_WRAPPER[java.lang.reflect.Method: int getModifiers()]
}

public virtual global::System.Object getName(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.String getName()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.String getName()]
}

public virtual global::System.Object getParameterTypes(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.Class[] getParameterTypes()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = ((global::java.lang.reflect.Method) _r1_o)._fparameterTypes;
    return (global::org.xmlvm._nArrayAdapter<global::System.Object>) _r0_o;
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.Class[] getParameterTypes()]
}

public virtual global::System.Object getReturnType(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.Class getReturnType()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    _r3_o = this;
    _r0_o = new global::org.apache.harmony.luni.lang.reflect.GenericSignatureParser();
    _r1_o = null;
    ((global::org.apache.harmony.luni.lang.reflect.GenericSignatureParser) _r0_o).@this((global::java.lang.ClassLoader) _r1_o);
    _r1_o = ((global::java.lang.reflect.Method) _r3_o)._fsignature;
    _r2_o = ((global::java.lang.reflect.Method) _r3_o)._fexceptionTypes;
    ((global::org.apache.harmony.luni.lang.reflect.GenericSignatureParser) _r0_o).parseForMethod((global::java.lang.reflect.GenericDeclaration) _r3_o, (global::java.lang.String) _r1_o, (global::org.xmlvm._nArrayAdapter<global::System.Object>) _r2_o);
    _r1_o = ((global::org.apache.harmony.luni.lang.reflect.GenericSignatureParser) _r0_o)._freturnType;
    _r3_o = global::org.apache.harmony.luni.lang.reflect.Types.getType((global::java.lang.reflect.Type) _r1_o);
    return (global::java.lang.Class) _r3_o;
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.Class getReturnType()]
}

public override int hashCode(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: int hashCode()]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: int hashCode()]
}

public virtual global::System.Object invoke(global::java.lang.Object n1, global::org.xmlvm._nArrayAdapter<global::System.Object> n2){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object, java.lang.Object[])]
    throw new org.xmlvm._nNativeImplementationException();
//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object, java.lang.Object[])]
}

public override global::System.Object toString(){
//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method: java.lang.String toString()]
    throw new org.xmlvm._nNativeImplementationException();
}

// injected nested class:
public class _nImpl : java.lang.reflect.Method, org.xmlvm._nIJavaClient {

    // in the meantime we are using the _faddress to store the adapter
    public virtual void @this(java.lang.Object memberInfoAdapter) {
        base.@this();
        this._faddress = memberInfoAdapter;
    }

    public override global::System.Object getTypeParameters() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object toGenericString() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getGenericParameterTypes() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getGenericExceptionTypes() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getGenericReturnType() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getParameterAnnotations() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool isVarArgs() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool isBridge() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool isSynthetic() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getDefaultValue() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override bool equals(java.lang.Object n1) {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getDeclaringClass() {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Method._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Method._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo nativeMethodInfo = adapter.getMemberInfoAdaptee();
        global::System.Type nativeType = nativeMethodInfo.DeclaringType;
        java.lang.Class result = org.xmlvm._nTIB.getClass(nativeType);
        return result;
    }

    public override global::System.Object getExceptionTypes() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override int getModifiers() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object getName() {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Method._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Method._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo nativeMethodInfo = adapter.getMemberInfoAdaptee();
        string nativeIdentifier = nativeMethodInfo.Name;
        string javaIdentifier = org.xmlvm._nUtil.nativeToJavaName(nativeIdentifier, false);
        java.lang.String result = org.xmlvm._nUtil.toJavaString(javaIdentifier);
        return result;
    }

    public override global::System.Object getParameterTypes() {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Method._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Method._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo nativeMethodInfo = adapter.getMemberInfoAdaptee();
        global::System.Reflection.ParameterInfo[] nativeParameterInfos = nativeMethodInfo.GetParameters();
        java.lang.Class[] parameterJavaTypes = new java.lang.Class[nativeParameterInfos.Length];
        for (int i=0; i<nativeParameterInfos.Length; i++) {
            global::System.Type parameterNativeType = nativeParameterInfos[i].ParameterType;
            parameterJavaTypes[i] = org.xmlvm._nTIB.getClass(parameterNativeType);
        }
        org.xmlvm._nArrayAdapter<object> result = new org.xmlvm._nArrayAdapter<object>(parameterJavaTypes);
        return result;

    }

    public override global::System.Object getReturnType() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override int hashCode() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

    public override global::System.Object invoke(java.lang.Object n1, org.xmlvm._nArrayAdapter<global::System.Object> n2) {
        org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                      java.lang.reflect.Method._nImpl> adapter 
            = (org.xmlvm._nMemberInfoAdapter<global::System.Reflection.MethodInfo,
                                             java.lang.reflect.Method._nImpl>) this._faddress;
        global::System.Reflection.MethodInfo nativeMethodInfo = adapter.getMemberInfoAdaptee();
        global::System.Reflection.ParameterInfo[] nativeParameterInfos = nativeMethodInfo.GetParameters();
        object[] methodNativeParameters = n2.getCSharpArray();
        for (int i=0; i<methodNativeParameters.Length; i++) {
            methodNativeParameters[i] 
                = org.xmlvm._nTIB.unboxIfPrimitive((java.lang.Object) methodNativeParameters[i], nativeParameterInfos[i].ParameterType);
        }
        object returnValue = nativeMethodInfo.Invoke(n1, methodNativeParameters);
        returnValue = org.xmlvm._nTIB.boxIfPrimitive(returnValue, nativeMethodInfo.ReturnType);
        return returnValue;
    }

    public override global::System.Object toString() {
        throw new org.xmlvm._nNotYetImplementedException("native/wrapper method not yet implemented");
    }

//XMLVM_END_WRAPPER[java.lang.reflect.Method: java.lang.String toString()]
}

//XMLVM_BEGIN_WRAPPER[java.lang.reflect.Method]
//XMLVM_END_WRAPPER[java.lang.reflect.Method]

} // end of class: Method

} // end of namespace: java.lang.reflect
