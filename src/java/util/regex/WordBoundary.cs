// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.util.regex {
public class WordBoundary: global::java.util.regex.AbstractSet {
public bool _fpositive;

public void @this(bool n1){
//XMLVM_BEGIN_WRAPPER[java.util.regex.WordBoundary: void <init>(boolean)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r0_o = this;
    _r1.i = n1 ? 1 : 0;
    ((global::java.util.regex.AbstractSet) _r0_o).@this();
    ((global::java.util.regex.WordBoundary) _r0_o)._fpositive = 0!=_r1.i;
    return;
//XMLVM_END_WRAPPER[java.util.regex.WordBoundary: void <init>(boolean)]
}

public override int matches(int n1, global::java.lang.CharSequence n2, global::java.util.regex.MatchResultImpl n3){
//XMLVM_BEGIN_WRAPPER[java.util.regex.WordBoundary: int matches(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nElement _r7;
    global::System.Object _r7_o = null;
    global::org.xmlvm._nElement _r8;
    global::System.Object _r8_o = null;
    global::org.xmlvm._nElement _r9;
    global::System.Object _r9_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r6_o = this;
    _r7.i = n1;
    _r8_o = n2;
    _r9_o = n3;
    _r5.i = 0;
    _r3.i = 32;
    _r4.i = 1;
    _r0.i = ((global::java.util.regex.MatchResultImpl) _r9_o).getRightBound();
    if (_r7.i < _r0.i) goto label49;
    _r0.i = _r3.i;
    label11:;
    if (_r7.i != 0) goto label54;
    _r1.i = _r3.i;
    label14:;
    _r2.i = ((global::java.util.regex.MatchResultImpl) _r9_o).hasTransparentBounds() ? 1 : 0;
    if (_r2.i == 0) goto label61;
    _r2.i = _r5.i;
    label21:;
    if (_r0.i == _r3.i) goto label66;
    _r0.i = ((global::java.util.regex.WordBoundary) _r6_o).isSpace((char) _r0.i, (int) _r7.i, (int) _r2.i, (global::java.lang.CharSequence) _r8_o) ? 1 : 0;
    if (_r0.i != 0) goto label66;
    _r0.i = _r5.i;
    label30:;
    if (_r1.i == _r3.i) goto label68;
    _r3.i = _r7.i - _r4.i;
    _r1.i = ((global::java.util.regex.WordBoundary) _r6_o).isSpace((char) _r1.i, (int) _r3.i, (int) _r2.i, (global::java.lang.CharSequence) _r8_o) ? 1 : 0;
    if (_r1.i != 0) goto label68;
    _r1.i = _r5.i;
    label41:;
    _r0.i = _r0.i ^ _r1.i;
    _r1.i = ((global::java.util.regex.WordBoundary) _r6_o)._fpositive ? 1 : 0;
    _r0.i = _r0.i ^ _r1.i;
    if (_r0.i == 0) goto label70;
    _r0.i = -1;
    label48:;
    return _r0.i;
    label49:;
    _r0.i = ((global::java.lang.CharSequence) _r8_o).charAt((int) _r7.i);
    goto label11;
    label54:;
    _r1.i = _r7.i - _r4.i;
    _r1.i = ((global::java.lang.CharSequence) _r8_o).charAt((int) _r1.i);
    goto label14;
    label61:;
    _r2.i = ((global::java.util.regex.MatchResultImpl) _r9_o).getLeftBound();
    goto label21;
    label66:;
    _r0.i = _r4.i;
    goto label30;
    label68:;
    _r1.i = _r4.i;
    goto label41;
    label70:;
    _r0_o = ((global::java.util.regex.WordBoundary) _r6_o)._fnext;
    _r0.i = ((global::java.util.regex.AbstractSet) _r0_o).matches((int) _r7.i, (global::java.lang.CharSequence) _r8_o, (global::java.util.regex.MatchResultImpl) _r9_o);
    goto label48;
//XMLVM_END_WRAPPER[java.util.regex.WordBoundary: int matches(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
}

public override bool hasConsumed(global::java.util.regex.MatchResultImpl n1){
//XMLVM_BEGIN_WRAPPER[java.util.regex.WordBoundary: boolean hasConsumed(java.util.regex.MatchResultImpl)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    _r2_o = n1;
    _r0.i = 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.util.regex.WordBoundary: boolean hasConsumed(java.util.regex.MatchResultImpl)]
}

public override global::System.Object getName(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.WordBoundary: java.lang.String getName()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    // Value=WordBoundary
    _r0_o = new global::java.lang.String();
    ((global::java.lang.String)_r0_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)87)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 100)), unchecked((char) unchecked((uint) 66)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 117)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 100)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 114)), unchecked((char) unchecked((uint) 121))}));
    return (global::java.lang.String) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.WordBoundary: java.lang.String getName()]
}

private bool isSpace(char n1, int n2, int n3, global::java.lang.CharSequence n4){
//XMLVM_BEGIN_WRAPPER[java.util.regex.WordBoundary: boolean isSpace(char, int, int, java.lang.CharSequence)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nElement _r7;
    global::System.Object _r7_o = null;
    global::org.xmlvm._nElement _r8;
    global::System.Object _r8_o = null;
    global::org.xmlvm._nElement _r9;
    global::System.Object _r9_o = null;
    global::org.xmlvm._nElement _r10;
    global::System.Object _r10_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r6_o = this;
    _r7.i = n1;
    _r8.i = n2;
    _r9.i = n3;
    _r10_o = n4;
    _r5.i = 6;
    _r4.i = 1;
    _r3.i = 0;
    _r0.i = global::java.lang.Character.isLetterOrDigit((char) _r7.i) ? 1 : 0;
    if (_r0.i != 0) goto label13;
    _r0.i = 95;
    if (_r7.i != _r0.i) goto label15;
    label13:;
    _r0.i = _r3.i;
    label14:;
    return _r0.i!=0;
    label15:;
    _r0.i = global::java.lang.Character.getType((char) _r7.i);
    if (_r0.i != _r5.i) goto label26;
    _r0.i = _r8.i;
    label22:;
    _r0.i = _r0.i + -1;
    if (_r0.i >= _r9.i) goto label28;
    label26:;
    _r0.i = _r4.i;
    goto label14;
    label28:;
    _r1.i = ((global::java.lang.CharSequence) _r10_o).charAt((int) _r0.i);
    _r2.i = global::java.lang.Character.isLetterOrDigit((char) _r1.i) ? 1 : 0;
    if (_r2.i == 0) goto label40;
    _r0.i = _r3.i;
    goto label14;
    label40:;
    _r1.i = global::java.lang.Character.getType((char) _r1.i);
    if (_r1.i == _r5.i) goto label22;
    _r0.i = _r4.i;
    goto label14;
//XMLVM_END_WRAPPER[java.util.regex.WordBoundary: boolean isSpace(char, int, int, java.lang.CharSequence)]
}

//XMLVM_BEGIN_WRAPPER[java.util.regex.WordBoundary]
//XMLVM_END_WRAPPER[java.util.regex.WordBoundary]

} // end of class: WordBoundary

} // end of namespace: java.util.regex
