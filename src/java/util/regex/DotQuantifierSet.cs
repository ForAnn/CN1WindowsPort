// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.util.regex {
public class DotQuantifierSet: global::java.util.regex.QuantifierSet {
public global::java.util.regex.AbstractLineTerminator _flt;

public void @this(global::java.util.regex.AbstractSet n1, global::java.util.regex.AbstractSet n2, int n3, global::java.util.regex.AbstractLineTerminator n4){
//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet: void <init>(java.util.regex.AbstractSet, java.util.regex.AbstractSet, int, java.util.regex.AbstractLineTerminator)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r0_o = this;
    _r1_o = n1;
    _r2_o = n2;
    _r3.i = n3;
    _r4_o = n4;
    ((global::java.util.regex.QuantifierSet) _r0_o).@this((global::java.util.regex.AbstractSet) _r1_o, (global::java.util.regex.AbstractSet) _r2_o, (int) _r3.i);
    ((global::java.util.regex.DotQuantifierSet) _r0_o)._flt = (global::java.util.regex.AbstractLineTerminator) _r4_o;
    return;
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet: void <init>(java.util.regex.AbstractSet, java.util.regex.AbstractSet, int, java.util.regex.AbstractLineTerminator)]
}

public override int matches(int n1, global::java.lang.CharSequence n2, global::java.util.regex.MatchResultImpl n3){
//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet: int matches(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r2_o = this;
    _r3.i = n1;
    _r4_o = n2;
    _r5_o = n3;
    _r0.i = ((global::java.util.regex.MatchResultImpl) _r5_o).getRightBound();
    _r1.i = ((global::java.util.regex.DotQuantifierSet) _r2_o).findLineTerminator((int) _r3.i, (int) _r0.i, (global::java.lang.CharSequence) _r4_o);
    if (_r1.i >= 0) goto label26;
    label10:;
    if (_r0.i > _r3.i) goto label19;
    _r0_o = ((global::java.util.regex.DotQuantifierSet) _r2_o)._fnext;
    _r0.i = ((global::java.util.regex.AbstractSet) _r0_o).matches((int) _r3.i, (global::java.lang.CharSequence) _r4_o, (global::java.util.regex.MatchResultImpl) _r5_o);
    label18:;
    return _r0.i;
    label19:;
    _r1_o = ((global::java.util.regex.DotQuantifierSet) _r2_o)._fnext;
    _r0.i = ((global::java.util.regex.AbstractSet) _r1_o).findBack((int) _r3.i, (int) _r0.i, (global::java.lang.CharSequence) _r4_o, (global::java.util.regex.MatchResultImpl) _r5_o);
    goto label18;
    label26:;
    _r0.i = _r1.i;
    goto label10;
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet: int matches(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
}

public override int find(int n1, global::java.lang.CharSequence n2, global::java.util.regex.MatchResultImpl n3){
//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet: int find(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nElement _r7;
    global::System.Object _r7_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r4_o = this;
    _r5.i = n1;
    _r6_o = n2;
    _r7_o = n3;
    _r3.i = -1;
    _r0.i = ((global::java.util.regex.MatchResultImpl) _r7_o).getRightBound();
    _r1_o = ((global::java.util.regex.DotQuantifierSet) _r4_o)._fnext;
    _r1.i = ((global::java.util.regex.AbstractSet) _r1_o).find((int) _r5.i, (global::java.lang.CharSequence) _r6_o, (global::java.util.regex.MatchResultImpl) _r7_o);
    if (_r1.i < 0) goto label45;
    _r2.i = ((global::java.util.regex.DotQuantifierSet) _r4_o).findLineTerminator((int) _r1.i, (int) _r0.i, (global::java.lang.CharSequence) _r6_o);
    if (_r2.i >= 0) goto label57;
    label19:;
    _r2_o = ((global::java.util.regex.DotQuantifierSet) _r4_o)._fnext;
    _r0.i = ((global::java.util.regex.AbstractSet) _r2_o).findBack((int) _r1.i, (int) _r0.i, (global::java.lang.CharSequence) _r6_o, (global::java.util.regex.MatchResultImpl) _r7_o);
    if (_r1.i >= _r0.i) goto label43;
    label27:;
    if (_r0.i <= 0) goto label47;
    _r1.i = 1;
    _r1.i = _r0.i - _r1.i;
    _r1.i = ((global::java.util.regex.DotQuantifierSet) _r4_o).findBackLineTerminator((int) _r5.i, (int) _r1.i, (global::java.lang.CharSequence) _r6_o);
    label36:;
    if (_r1.i < _r5.i) goto label55;
    if (_r1.i >= _r0.i) goto label53;
    _r0.i = _r1.i + 1;
    label42:;
    return _r0.i;
    label43:;
    _r0.i = _r1.i;
    goto label27;
    label45:;
    _r0.i = _r3.i;
    goto label42;
    label47:;
    if (_r0.i != 0) goto label51;
    _r1.i = 0;
    goto label36;
    label51:;
    _r1.i = _r3.i;
    goto label36;
    label53:;
    _r0.i = _r1.i;
    goto label42;
    label55:;
    _r0.i = _r5.i;
    goto label42;
    label57:;
    _r0.i = _r2.i;
    goto label19;
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet: int find(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
}

private int findLineTerminator(int n1, int n2, global::java.lang.CharSequence n3){
//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet: int findLineTerminator(int, int, java.lang.CharSequence)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r3_o = this;
    _r4.i = n1;
    _r5.i = n2;
    _r6_o = n3;
    _r0.i = _r4.i;
    label1:;
    if (_r0.i < _r5.i) goto label5;
    _r0.i = -1;
    label4:;
    return _r0.i;
    label5:;
    _r1_o = ((global::java.util.regex.DotQuantifierSet) _r3_o)._flt;
    _r2.i = ((global::java.lang.CharSequence) _r6_o).charAt((int) _r0.i);
    _r1.i = ((global::java.util.regex.AbstractLineTerminator) _r1_o).isLineTerminator((int) _r2.i) ? 1 : 0;
    if (_r1.i != 0) goto label4;
    _r0.i = _r0.i + 1;
    goto label1;
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet: int findLineTerminator(int, int, java.lang.CharSequence)]
}

private int findBackLineTerminator(int n1, int n2, global::java.lang.CharSequence n3){
//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet: int findBackLineTerminator(int, int, java.lang.CharSequence)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r3_o = this;
    _r4.i = n1;
    _r5.i = n2;
    _r6_o = n3;
    _r0.i = _r5.i;
    label1:;
    if (_r0.i >= _r4.i) goto label5;
    _r0.i = -1;
    label4:;
    return _r0.i;
    label5:;
    _r1_o = ((global::java.util.regex.DotQuantifierSet) _r3_o)._flt;
    _r2.i = ((global::java.lang.CharSequence) _r6_o).charAt((int) _r0.i);
    _r1.i = ((global::java.util.regex.AbstractLineTerminator) _r1_o).isLineTerminator((int) _r2.i) ? 1 : 0;
    if (_r1.i != 0) goto label4;
    _r0.i = _r0.i + -1;
    goto label1;
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet: int findBackLineTerminator(int, int, java.lang.CharSequence)]
}

public override global::System.Object getName(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet: java.lang.String getName()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    // Value=<DotQuant>
    _r0_o = new global::java.lang.String();
    ((global::java.lang.String)_r0_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)60)), unchecked((char) unchecked((uint) 68)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 81)), unchecked((char) unchecked((uint) 117)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 62))}));
    return (global::java.lang.String) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet: java.lang.String getName()]
}

//XMLVM_BEGIN_WRAPPER[java.util.regex.DotQuantifierSet]
//XMLVM_END_WRAPPER[java.util.regex.DotQuantifierSet]

} // end of class: DotQuantifierSet

} // end of namespace: java.util.regex
