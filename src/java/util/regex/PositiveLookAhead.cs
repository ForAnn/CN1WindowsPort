// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.util.regex {
public class PositiveLookAhead: global::java.util.regex.AtomicJointSet {
public void @this(global::java.util.ArrayList n1, global::java.util.regex.FSet n2){
//XMLVM_BEGIN_WRAPPER[java.util.regex.PositiveLookAhead: void <init>(java.util.ArrayList, java.util.regex.FSet)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r0_o = this;
    _r1_o = n1;
    _r2_o = n2;
    ((global::java.util.regex.AtomicJointSet) _r0_o).@this((global::java.util.ArrayList) _r1_o, (global::java.util.regex.FSet) _r2_o);
    return;
//XMLVM_END_WRAPPER[java.util.regex.PositiveLookAhead: void <init>(java.util.ArrayList, java.util.regex.FSet)]
}

public override int matches(int n1, global::java.lang.CharSequence n2, global::java.util.regex.MatchResultImpl n3){
//XMLVM_BEGIN_WRAPPER[java.util.regex.PositiveLookAhead: int matches(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::System.Object _r5_o = null;
    global::org.xmlvm._nElement _r6;
    global::System.Object _r6_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r3_o = this;
    _r4.i = n1;
    _r5_o = n2;
    _r6_o = n3;
    _r0_o = ((global::java.util.regex.PositiveLookAhead) _r3_o)._fchildren;
    _r1.i = ((global::java.util.ArrayList) _r0_o).size();
    _r0.i = 0;
    _r2.i = _r0.i;
    label8:;
    if (_r2.i < _r1.i) goto label12;
    _r0.i = -1;
    label11:;
    return _r0.i;
    label12:;
    _r0_o = ((global::java.util.regex.PositiveLookAhead) _r3_o)._fchildren;
    _r0_o = ((global::java.util.ArrayList) _r0_o).get((int) _r2.i);
    _r0_o = _r0_o;
    _r0.i = ((global::java.util.regex.AbstractSet) _r0_o).matches((int) _r4.i, (global::java.lang.CharSequence) _r5_o, (global::java.util.regex.MatchResultImpl) _r6_o);
    if (_r0.i < 0) goto label33;
    _r0_o = ((global::java.util.regex.PositiveLookAhead) _r3_o)._fnext;
    _r0.i = ((global::java.util.regex.AbstractSet) _r0_o).matches((int) _r4.i, (global::java.lang.CharSequence) _r5_o, (global::java.util.regex.MatchResultImpl) _r6_o);
    goto label11;
    label33:;
    _r0.i = _r2.i + 1;
    _r2.i = _r0.i;
    goto label8;
//XMLVM_END_WRAPPER[java.util.regex.PositiveLookAhead: int matches(int, java.lang.CharSequence, java.util.regex.MatchResultImpl)]
}

public override bool hasConsumed(global::java.util.regex.MatchResultImpl n1){
//XMLVM_BEGIN_WRAPPER[java.util.regex.PositiveLookAhead: boolean hasConsumed(java.util.regex.MatchResultImpl)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    _r2_o = n1;
    _r0.i = 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.util.regex.PositiveLookAhead: boolean hasConsumed(java.util.regex.MatchResultImpl)]
}

public override global::System.Object getName(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.PositiveLookAhead: java.lang.String getName()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    // Value=PosLookaheadJointSet
    _r0_o = new global::java.lang.String();
    ((global::java.lang.String)_r0_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)80)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 76)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 107)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 104)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 100)), unchecked((char) unchecked((uint) 74)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 83)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 116))}));
    return (global::java.lang.String) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.PositiveLookAhead: java.lang.String getName()]
}

//XMLVM_BEGIN_WRAPPER[java.util.regex.PositiveLookAhead]
//XMLVM_END_WRAPPER[java.util.regex.PositiveLookAhead]

} // end of class: PositiveLookAhead

} // end of namespace: java.util.regex
