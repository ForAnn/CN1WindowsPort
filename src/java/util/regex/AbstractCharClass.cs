// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.util.regex {
public abstract class AbstractCharClass: global::java.util.regex.SpecialToken {

static AbstractCharClass() {
    @static();
}

public bool _falt;

public bool _faltSurrogates;

public static int _fSURROGATE_1CARDINALITY;

public global::java.util.BitSet _flowHighSurrogates;

public global::java.util.regex.AbstractCharClass _fcharClassWithoutSurrogates;

public global::java.util.regex.AbstractCharClass _fcharClassWithSurrogates;

public static global::java.util.regex.AbstractCharClass_2PredefinedCharacterClasses _fcharClasses;

public bool _fmayContainSupplCodepoints;

public static void @static(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: void <clinit>()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    _r0.i = 2048;
    global::java.util.regex.AbstractCharClass._fSURROGATE_1CARDINALITY = _r0.i;
    _r0_o = new global::java.util.regex.AbstractCharClass_2PredefinedCharacterClasses();
    ((global::java.util.regex.AbstractCharClass_2PredefinedCharacterClasses) _r0_o).@this();
    global::java.util.regex.AbstractCharClass._fcharClasses = (global::java.util.regex.AbstractCharClass_2PredefinedCharacterClasses) _r0_o;
    return;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: void <clinit>()]
}

public void @this(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: void <init>()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    _r3_o = this;
    _r2_o = null;
    ((global::java.util.regex.SpecialToken) _r3_o).@this();
    _r0_o = new global::java.util.BitSet();
    _r1.i = global::java.util.regex.AbstractCharClass._fSURROGATE_1CARDINALITY;
    ((global::java.util.BitSet) _r0_o).@this((int) _r1.i);
    ((global::java.util.regex.AbstractCharClass) _r3_o)._flowHighSurrogates = (global::java.util.BitSet) _r0_o;
    ((global::java.util.regex.AbstractCharClass) _r3_o)._fcharClassWithoutSurrogates = (global::java.util.regex.AbstractCharClass) _r2_o;
    ((global::java.util.regex.AbstractCharClass) _r3_o)._fcharClassWithSurrogates = (global::java.util.regex.AbstractCharClass) _r2_o;
    _r0.i = 0;
    ((global::java.util.regex.AbstractCharClass) _r3_o)._fmayContainSupplCodepoints = 0!=_r0.i;
    return;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: void <init>()]
}

public abstract bool contains(int n1);

public virtual global::System.Object getBits(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.BitSet getBits()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = null;
    return (global::java.util.BitSet) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.BitSet getBits()]
}

public virtual global::System.Object getLowHighSurrogates(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.BitSet getLowHighSurrogates()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r1_o)._flowHighSurrogates;
    return (global::java.util.BitSet) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.BitSet getLowHighSurrogates()]
}

public virtual bool hasLowHighSurrogates(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean hasLowHighSurrogates()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::org.xmlvm._nElement _r2;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r4_o = null;
    _r4_o = this;
    _r3.i = 1;
    _r2.i = 0;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r4_o)._faltSurrogates ? 1 : 0;
    if (_r0.i == 0) goto label20;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r4_o)._flowHighSurrogates;
    _r0.i = ((global::java.util.BitSet) _r0_o).nextClearBit((int) _r2.i);
    _r1.i = global::java.util.regex.AbstractCharClass._fSURROGATE_1CARDINALITY;
    if (_r0.i >= _r1.i) goto label18;
    _r0.i = _r3.i;
    label17:;
    return _r0.i!=0;
    label18:;
    _r0.i = _r2.i;
    goto label17;
    label20:;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r4_o)._flowHighSurrogates;
    _r0.i = ((global::java.util.BitSet) _r0_o).nextSetBit((int) _r2.i);
    _r1.i = global::java.util.regex.AbstractCharClass._fSURROGATE_1CARDINALITY;
    if (_r0.i >= _r1.i) goto label32;
    _r0.i = _r3.i;
    goto label17;
    label32:;
    _r0.i = _r2.i;
    goto label17;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean hasLowHighSurrogates()]
}

public virtual bool mayContainSupplCodepoints(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean mayContainSupplCodepoints()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r1_o)._fmayContainSupplCodepoints ? 1 : 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean mayContainSupplCodepoints()]
}

public override int getType(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: int getType()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 1;
    return _r0.i;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: int getType()]
}

public virtual global::System.Object getInstance(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getInstance()]
    global::System.Object _r0_o = null;
    _r0_o = this;
    return (global::java.util.regex.AbstractCharClass) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getInstance()]
}

public virtual global::System.Object getSurrogates(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getSurrogates()]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    _r2_o = this;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithSurrogates;
    if (_r0_o != null) goto label22;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o).getLowHighSurrogates();
    _r1_o = new global::java.util.regex.AbstractCharClass_21();
    ((global::java.util.regex.AbstractCharClass_21) _r1_o).@this((global::java.util.regex.AbstractCharClass) _r2_o, (global::java.util.BitSet) _r0_o);
    ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithSurrogates = (global::java.util.regex.AbstractCharClass) _r1_o;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithSurrogates;
    _r1.i = ((global::java.util.regex.AbstractCharClass) _r2_o)._faltSurrogates ? 1 : 0;
    ((global::java.util.regex.AbstractCharClass) _r0_o).setNegative(0!=_r1.i);
    label22:;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithSurrogates;
    return (global::java.util.regex.AbstractCharClass) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getSurrogates()]
}

public virtual global::System.Object getWithoutSurrogates(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getWithoutSurrogates()]
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    _r2_o = this;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithoutSurrogates;
    if (_r0_o != null) goto label30;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o).getLowHighSurrogates();
    _r1_o = new global::java.util.regex.AbstractCharClass_22();
    ((global::java.util.regex.AbstractCharClass_22) _r1_o).@this((global::java.util.regex.AbstractCharClass) _r2_o, (global::java.util.BitSet) _r0_o, (global::java.util.regex.AbstractCharClass) _r2_o);
    ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithoutSurrogates = (global::java.util.regex.AbstractCharClass) _r1_o;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithoutSurrogates;
    _r1.i = ((global::java.util.regex.AbstractCharClass) _r2_o).isNegative() ? 1 : 0;
    ((global::java.util.regex.AbstractCharClass) _r0_o).setNegative(0!=_r1.i);
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithoutSurrogates;
    _r1.i = ((global::java.util.regex.AbstractCharClass) _r2_o)._fmayContainSupplCodepoints ? 1 : 0;
    ((global::java.util.regex.AbstractCharClass) _r0_o)._fmayContainSupplCodepoints = 0!=_r1.i;
    label30:;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o)._fcharClassWithoutSurrogates;
    return (global::java.util.regex.AbstractCharClass) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getWithoutSurrogates()]
}

public virtual bool hasUCI(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean hasUCI()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean hasUCI()]
}

public virtual global::System.Object setNegative(bool n1){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass setNegative(boolean)]
    global::org.xmlvm._nElement _r0;
    global::org.xmlvm._nElement _r1;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nElement _r4;
    _r3_o = this;
    _r4.i = n1 ? 1 : 0;
    _r2.i = 0;
    _r1.i = 1;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r3_o)._falt ? 1 : 0;
    _r0.i = _r0.i ^ _r4.i;
    if (_r0.i == 0) goto label21;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r3_o)._falt ? 1 : 0;
    if (_r0.i == 0) goto label28;
    _r0.i = _r2.i;
    label12:;
    ((global::java.util.regex.AbstractCharClass) _r3_o)._falt = 0!=_r0.i;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r3_o)._faltSurrogates ? 1 : 0;
    if (_r0.i == 0) goto label30;
    _r0.i = _r2.i;
    label19:;
    ((global::java.util.regex.AbstractCharClass) _r3_o)._faltSurrogates = 0!=_r0.i;
    label21:;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r3_o)._fmayContainSupplCodepoints ? 1 : 0;
    if (_r0.i != 0) goto label27;
    ((global::java.util.regex.AbstractCharClass) _r3_o)._fmayContainSupplCodepoints = 0!=_r1.i;
    label27:;
    return (global::java.util.regex.AbstractCharClass) _r3_o;
    label28:;
    _r0.i = _r1.i;
    goto label12;
    label30:;
    _r0.i = _r1.i;
    goto label19;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass setNegative(boolean)]
}

public virtual bool isNegative(){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean isNegative()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    _r1_o = this;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r1_o)._falt ? 1 : 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean isNegative()]
}

public static bool intersects(int n1, int n2){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean intersects(int, int)]
    global::org.xmlvm._nElement _r0;
    global::org.xmlvm._nElement _r1;
    global::org.xmlvm._nElement _r2;
    _r1.i = n1;
    _r2.i = n2;
    if (_r1.i != _r2.i) goto label4;
    _r0.i = 1;
    label3:;
    return _r0.i!=0;
    label4:;
    _r0.i = 0;
    goto label3;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean intersects(int, int)]
}

public static bool intersects(global::java.util.regex.AbstractCharClass n1, int n2){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean intersects(java.util.regex.AbstractCharClass, int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = n1;
    _r2.i = n2;
    _r0.i = ((global::java.util.regex.AbstractCharClass) _r1_o).contains((int) _r2.i) ? 1 : 0;
    return _r0.i!=0;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean intersects(java.util.regex.AbstractCharClass, int)]
}

public static bool intersects(global::java.util.regex.AbstractCharClass n1, global::java.util.regex.AbstractCharClass n2){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: boolean intersects(java.util.regex.AbstractCharClass, java.util.regex.AbstractCharClass)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    _r2_o = n1;
    _r3_o = n2;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o).getBits();
    if (_r0_o == null) goto label12;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r3_o).getBits();
    if (_r0_o != null) goto label14;
    label12:;
    _r0.i = 1;
    label13:;
    return _r0.i!=0;
    label14:;
    _r0_o = ((global::java.util.regex.AbstractCharClass) _r2_o).getBits();
    _r1_o = ((global::java.util.regex.AbstractCharClass) _r3_o).getBits();
    _r0.i = ((global::java.util.BitSet) _r0_o).intersects((global::java.util.BitSet) _r1_o) ? 1 : 0;
    goto label13;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: boolean intersects(java.util.regex.AbstractCharClass, java.util.regex.AbstractCharClass)]
}

public static global::System.Object getPredefinedClass(global::java.lang.String n1, bool n2){
//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getPredefinedClass(java.lang.String, boolean)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = n1;
    _r2.i = n2 ? 1 : 0;
    _r0_o = global::java.util.regex.AbstractCharClass._fcharClasses;
    _r1_o = ((global::java.util.regex.AbstractCharClass_2PredefinedCharacterClasses) _r0_o).getObject((global::java.lang.String) _r1_o);
    _r1_o = _r1_o;
    _r0_o = ((global::java.util.regex.AbstractCharClass_2LazyCharClass) _r1_o).getValue(0!=_r2.i);
    return (global::java.util.regex.AbstractCharClass) _r0_o;
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass: java.util.regex.AbstractCharClass getPredefinedClass(java.lang.String, boolean)]
}

//XMLVM_BEGIN_WRAPPER[java.util.regex.AbstractCharClass]
//XMLVM_END_WRAPPER[java.util.regex.AbstractCharClass]

} // end of class: AbstractCharClass

} // end of namespace: java.util.regex
