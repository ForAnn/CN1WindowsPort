// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.util {
public abstract class _iNavigableSet {

} // end of abstract class: _iNavigableSet

public interface NavigableSet: global::java.util.SortedSet {
 global::System.Object pollFirst();

 global::System.Object pollLast();

 global::System.Object higher(global::java.lang.Object n1);

 global::System.Object ceiling(global::java.lang.Object n1);

 global::System.Object lower(global::java.lang.Object n1);

 global::System.Object floor(global::java.lang.Object n1);

 global::System.Object descendingIterator();

 global::System.Object descendingSet();

 global::System.Object subSet(global::java.lang.Object n1, bool n2, global::java.lang.Object n3, bool n4);

 global::System.Object headSet(global::java.lang.Object n1, bool n2);

 global::System.Object tailSet(global::java.lang.Object n1, bool n2);

new  bool addAll(global::java.util.Collection n1);

new  bool add(global::java.lang.Object n1);

new  void clear();

new  global::System.Object comparator();

new  bool containsAll(global::java.util.Collection n1);

new  bool contains(global::java.lang.Object n1);

new  bool equals(global::java.lang.Object n1);

new  global::System.Object first();

new  int hashCode();

new  global::System.Object headSet(global::java.lang.Object n1);

new  bool isEmpty();

new  global::System.Object iterator();

new  global::System.Object last();

new  bool removeAll(global::java.util.Collection n1);

new  bool remove(global::java.lang.Object n1);

new  bool retainAll(global::java.util.Collection n1);

new  int size();

new  global::System.Object subSet(global::java.lang.Object n1, global::java.lang.Object n2);

new  global::System.Object tailSet(global::java.lang.Object n1);

new  global::System.Object toArray();

new  global::System.Object toArray(global::org.xmlvm._nArrayAdapter<global::System.Object> n1);

//XMLVM_BEGIN_WRAPPER[java.util.NavigableSet]
//XMLVM_END_WRAPPER[java.util.NavigableSet]

} // end of interface: NavigableSet

} // end of namespace: java.util
