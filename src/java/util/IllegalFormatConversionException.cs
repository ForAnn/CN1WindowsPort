// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace java.util {
public class IllegalFormatConversionException: global::java.util.IllegalFormatException,global::java.io.Serializable {
private static long _fserialVersionUID = 17000126L;

private char _fc;

private global::java.lang.Class _farg;

public void @this(char n1, global::java.lang.Class n2){
//XMLVM_BEGIN_WRAPPER[java.util.IllegalFormatConversionException: void <init>(char, java.lang.Class)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nElement _r3;
    global::System.Object _r3_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    _r2.i = n1;
    _r3_o = n2;
    ((global::java.util.IllegalFormatException) _r1_o).@this();
    ((global::java.util.IllegalFormatConversionException) _r1_o)._fc = (char) _r2.i;
    if (_r3_o != null) goto label13;
    _r0_o = new global::java.lang.NullPointerException();
    ((global::java.lang.NullPointerException) _r0_o).@this();
    throw new global::org.xmlvm._nExceptionAdapter((global::java.lang.NullPointerException) _r0_o);
    label13:;
    ((global::java.util.IllegalFormatConversionException) _r1_o)._farg = (global::java.lang.Class) _r3_o;
    return;
//XMLVM_END_WRAPPER[java.util.IllegalFormatConversionException: void <init>(char, java.lang.Class)]
}

public virtual global::System.Object getArgumentClass(){
//XMLVM_BEGIN_WRAPPER[java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    _r0_o = ((global::java.util.IllegalFormatConversionException) _r1_o)._farg;
    return (global::java.lang.Class) _r0_o;
//XMLVM_END_WRAPPER[java.util.IllegalFormatConversionException: java.lang.Class getArgumentClass()]
}

public virtual char getConversion(){
//XMLVM_BEGIN_WRAPPER[java.util.IllegalFormatConversionException: char getConversion()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r1_o = this;
    _r0.i = ((global::java.util.IllegalFormatConversionException) _r1_o)._fc;
    return (char) _r0.i;
//XMLVM_END_WRAPPER[java.util.IllegalFormatConversionException: char getConversion()]
}

public override global::System.Object getMessage(){
//XMLVM_BEGIN_WRAPPER[java.util.IllegalFormatConversionException: java.lang.String getMessage()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r2_o = this;
    _r0_o = new global::java.lang.StringBuilder();
    ((global::java.lang.StringBuilder) _r0_o).@this();
    _r1.i = ((global::java.util.IllegalFormatConversionException) _r2_o)._fc;
    ((global::java.lang.StringBuilder) _r0_o).append((char) _r1.i);
    // Value= is incompatible with 
    _r1_o = new global::java.lang.String();
    ((global::java.lang.String)_r1_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)32)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 115)), unchecked((char) unchecked((uint) 32)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 110)), unchecked((char) unchecked((uint) 99)), unchecked((char) unchecked((uint) 111)), unchecked((char) unchecked((uint) 109)), unchecked((char) unchecked((uint) 112)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 98)), unchecked((char) unchecked((uint) 108)), unchecked((char) unchecked((uint) 101)), unchecked((char) unchecked((uint) 32)), unchecked((char) unchecked((uint) 119)), unchecked((char) unchecked((uint) 105)), unchecked((char) unchecked((uint) 116)), unchecked((char) unchecked((uint) 104)), unchecked((char) unchecked((uint) 32))}));
    ((global::java.lang.StringBuilder) _r0_o).append((global::java.lang.String) _r1_o);
    _r1_o = ((global::java.util.IllegalFormatConversionException) _r2_o)._farg;
    _r1_o = ((global::java.lang.Class) _r1_o).getName();
    ((global::java.lang.StringBuilder) _r0_o).append((global::java.lang.String) _r1_o);
    _r0_o = ((global::java.lang.StringBuilder) _r0_o).toString();
    return (global::java.lang.String) _r0_o;
//XMLVM_END_WRAPPER[java.util.IllegalFormatConversionException: java.lang.String getMessage()]
}

//XMLVM_BEGIN_WRAPPER[java.util.IllegalFormatConversionException]
//XMLVM_END_WRAPPER[java.util.IllegalFormatConversionException]

} // end of class: IllegalFormatConversionException

} // end of namespace: java.util
