// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace org.xmlvm.runtime {
public class XMLVMOutputStream: global::java.io.OutputStream {
public void @this(){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream: void <init>()]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r0_o = this;
    ((global::java.io.OutputStream) _r0_o).@this();
    return;
//XMLVM_END_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream: void <init>()]
}

public override void write(int n1){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream: void write(int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r0_o = null;
    global::org.xmlvm._nElement _r1;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nExceptionAdapter _ex = null;
    _r0_o = this;
    _r1.i = n1;
    global::org.xmlvm.runtime.XMLVMOutputStream.nativeWrite((int) _r1.i);
    return;
//XMLVM_END_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream: void write(int)]
}

public static void nativeWrite(int n1){
//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream: void nativeWrite(int)]
#if CONSOLE
    global::System.Console.Write((char) n1);
#else 
    if ((char)n1 == '\n')
    {
        global::System.Diagnostics.Debug.WriteLine(buffer);
        buffer = "";
    }
    else
    {
        buffer += (char)n1;
    }
#endif
//XMLVM_END_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream: void nativeWrite(int)]
}

//XMLVM_BEGIN_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream]
private static global::System.String buffer = "";
//XMLVM_END_WRAPPER[org.xmlvm.runtime.XMLVMOutputStream]

} // end of class: XMLVMOutputStream

} // end of namespace: org.xmlvm.runtime
