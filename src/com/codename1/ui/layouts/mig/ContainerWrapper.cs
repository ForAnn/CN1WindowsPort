// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace com.codename1.ui.layouts.mig {
public abstract class _iContainerWrapper {

} // end of abstract class: _iContainerWrapper

public interface ContainerWrapper: global::com.codename1.ui.layouts.mig.ComponentWrapper {
 global::System.Object getComponents();

 int getComponentCount();

 global::System.Object getLayout();

 bool isLeftToRight();

 void paintDebugCell(int n1, int n2, int n3, int n4);

new  int getBaseline(int n1, int n2);

new  int getComponentType(bool n1);

new  global::System.Object getComponent();

new  int getContentBias();

new  int getHeight();

new  int getHorizontalScreenDPI();

new  int getLayoutHashCode();

new  global::System.Object getLinkId();

new  int getMaximumHeight(int n1);

new  int getMaximumWidth(int n1);

new  int getMinimumHeight(int n1);

new  int getMinimumWidth(int n1);

new  global::System.Object getParent();

new  float getPixelUnitFactor(bool n1);

new  int getPreferredHeight(int n1);

new  int getPreferredWidth(int n1);

new  int getScreenHeight();

new  int getScreenLocationX();

new  int getScreenLocationY();

new  int getScreenWidth();

new  int getVerticalScreenDPI();

new  global::System.Object getVisualPadding();

new  int getWidth();

new  int getX();

new  int getY();

new  bool hasBaseline();

new  bool isVisible();

new  void paintDebugOutline(bool n1);

new  void setBounds(int n1, int n2, int n3, int n4);

//XMLVM_BEGIN_WRAPPER[com.codename1.ui.layouts.mig.ContainerWrapper]
//XMLVM_END_WRAPPER[com.codename1.ui.layouts.mig.ContainerWrapper]

} // end of interface: ContainerWrapper

} // end of namespace: com.codename1.ui.layouts.mig
