// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace com.codename1.ui.layouts.mig {
public abstract class _iContainerWrapper {

} // end of abstract class: _iContainerWrapper

public interface ContainerWrapper: global::com.codename1.ui.layouts.mig.ComponentWrapper {
 global::System.Object getComponents();

 int getComponentCount();

 global::System.Object getLayout();

 bool isLeftToRight();

 void paintDebugCell(int n1, int n2, int n3, int n4);

 int getBaseline(int n1, int n2);

 int getComponentType(bool n1);

 global::System.Object getComponent();

 int getContentBias();

 int getHeight();

 int getHorizontalScreenDPI();

 int getLayoutHashCode();

 global::System.Object getLinkId();

 int getMaximumHeight(int n1);

 int getMaximumWidth(int n1);

 int getMinimumHeight(int n1);

 int getMinimumWidth(int n1);

 global::System.Object getParent();

 float getPixelUnitFactor(bool n1);

 int getPreferredHeight(int n1);

 int getPreferredWidth(int n1);

 int getScreenHeight();

 int getScreenLocationX();

 int getScreenLocationY();

 int getScreenWidth();

 int getVerticalScreenDPI();

 global::System.Object getVisualPadding();

 int getWidth();

 int getX();

 int getY();

 bool hasBaseline();

 bool isVisible();

 void paintDebugOutline(bool n1);

 void setBounds(int n1, int n2, int n3, int n4);

//XMLVM_BEGIN_WRAPPER[com.codename1.ui.layouts.mig.ContainerWrapper]
//XMLVM_END_WRAPPER[com.codename1.ui.layouts.mig.ContainerWrapper]

} // end of interface: ContainerWrapper

} // end of namespace: com.codename1.ui.layouts.mig
