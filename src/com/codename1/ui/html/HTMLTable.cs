// Automatically generated by xmlvm2csharp (do not edit).

using org.xmlvm;
namespace com.codename1.ui.html {
public class HTMLTable: global::com.codename1.ui.table.Table {
public bool _finnerBorderGroups;

public static int _fINNER_1BORDERS_1GROUPS = 4;

public void @this(global::com.codename1.ui.html.HTMLTableModel n1){
//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable: void <init>(com.codename1.ui.html.HTMLTableModel)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    global::System.Object _r2_o = null;
    _r1_o = this;
    _r2_o = n1;
    _r0.i = 0;
    ((global::com.codename1.ui.table.Table) _r1_o).@this((global::com.codename1.ui.table.TableModel) _r2_o, 0!=_r0.i);
    ((global::com.codename1.ui.html.HTMLTable) _r1_o).setCollapseBorder(0!=_r0.i);
    return;
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable: void <init>(com.codename1.ui.html.HTMLTableModel)]
}

public override global::System.Object getUIID(){
//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable: java.lang.String getUIID()]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    _r1_o = this;
    // Value=HTMLTable
    _r0_o = new global::java.lang.String();
    ((global::java.lang.String)_r0_o).@this(new global::org.xmlvm._nArrayAdapter<char>(new char[] {unchecked((char) unchecked((uint)72)), unchecked((char) unchecked((uint) 84)), unchecked((char) unchecked((uint) 77)), unchecked((char) unchecked((uint) 76)), unchecked((char) unchecked((uint) 84)), unchecked((char) unchecked((uint) 97)), unchecked((char) unchecked((uint) 98)), unchecked((char) unchecked((uint) 108)), unchecked((char) unchecked((uint) 101))}));
    return (global::java.lang.String) _r0_o;
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable: java.lang.String getUIID()]
}

public override global::System.Object createCell(global::java.lang.Object n1, int n2, int n3, bool n4){
//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable: com.codename1.ui.Component createCell(java.lang.Object, int, int, boolean)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r3_o = null;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::org.xmlvm._nElement _r6;
    global::org.xmlvm._nElement _r7;
    _r3_o = this;
    _r4_o = n1;
    _r5.i = n2;
    _r6.i = n3;
    _r7.i = n4 ? 1 : 0;
    _r1_o = null;
    _r2.i = ((_r4_o != null) && (_r4_o is global::com.codename1.ui.Component)) ? 1 : 0;
    if (_r2.i == 0) goto label14;
    _r0_o = _r4_o;
    _r1_o = _r0_o;
    label9:;
    _r2.i = 0;
    ((global::com.codename1.ui.Component) _r1_o).setFocusable(0!=_r2.i);
    return (global::com.codename1.ui.Component) _r1_o;
    label14:;
    _r1_o = base.createCell((global::java.lang.Object) _r4_o, (int) _r5.i, (int) _r6.i, 0!=_r7.i);
    goto label9;
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable: com.codename1.ui.Component createCell(java.lang.Object, int, int, boolean)]
}

public override global::System.Object createCellConstraint(global::java.lang.Object n1, int n2, int n3){
//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable: com.codename1.ui.table.TableLayout$Constraint createCellConstraint(java.lang.Object, int, int)]
    global::System.Object _r0_o = null;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    global::System.Object _r2_o = null;
    global::System.Object _r3_o = null;
    global::System.Object _r4_o = null;
    global::org.xmlvm._nElement _r5;
    global::org.xmlvm._nElement _r6;
    _r3_o = this;
    _r4_o = n1;
    _r5.i = n2;
    _r6.i = n3;
    _r2_o = ((global::com.codename1.ui.html.HTMLTable) _r3_o).getModel();
    _r0_o = ((global::com.codename1.ui.html.HTMLTableModel) _r2_o).getConstraint((global::java.lang.Object) _r4_o);
    if (_r0_o != null) goto label17;
    _r2_o = base.createCellConstraint((global::java.lang.Object) _r4_o, (int) _r5.i, (int) _r6.i);
    label16:;
    return (global::com.codename1.ui.table.TableLayout_2Constraint) _r2_o;
    label17:;
    _r1_o = new global::com.codename1.ui.table.TableLayout_2Constraint();
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).@this();
    _r2.i = ((global::com.codename1.ui.html.CellConstraint) _r0_o)._falign;
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).setHorizontalAlign((int) _r2.i);
    _r2.i = ((global::com.codename1.ui.html.CellConstraint) _r0_o)._fvalign;
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).setVerticalAlign((int) _r2.i);
    _r2.i = ((global::com.codename1.ui.html.CellConstraint) _r0_o)._fspanHorizontal;
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).setHorizontalSpan((int) _r2.i);
    _r2.i = ((global::com.codename1.ui.html.CellConstraint) _r0_o)._fspanVertical;
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).setVerticalSpan((int) _r2.i);
    _r2.i = ((global::com.codename1.ui.html.CellConstraint) _r0_o)._fwidth;
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).setWidthPercentage((int) _r2.i);
    _r2.i = ((global::com.codename1.ui.html.CellConstraint) _r0_o)._fheight;
    ((global::com.codename1.ui.table.TableLayout_2Constraint) _r1_o).setHeightPercentage((int) _r2.i);
    _r2_o = _r1_o;
    goto label16;
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable: com.codename1.ui.table.TableLayout$Constraint createCellConstraint(java.lang.Object, int, int)]
}

public override bool shouldDrawInnerBorderAfterRow(int n1){
//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable: boolean shouldDrawInnerBorderAfterRow(int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = this;
    _r2.i = n1;
    _r0.i = ((global::com.codename1.ui.html.HTMLTable) _r1_o)._finnerBorderGroups ? 1 : 0;
    if (_r0.i == 0) goto label15;
    _r1_o = ((global::com.codename1.ui.html.HTMLTable) _r1_o).getModel();
    _r0.i = ((global::com.codename1.ui.html.HTMLTableModel) _r1_o).isSegmentEnd((int) _r2.i) ? 1 : 0;
    label14:;
    return _r0.i!=0;
    label15:;
    _r0.i = 1;
    goto label14;
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable: boolean shouldDrawInnerBorderAfterRow(int)]
}

public override void setInnerBorderMode(int n1){
//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable: void setInnerBorderMode(int)]
    global::org.xmlvm._nElement _r0;
    global::System.Object _r1_o = null;
    global::org.xmlvm._nElement _r2;
    _r1_o = this;
    _r2.i = n1;
    _r0.i = 4;
    if (_r2.i != _r0.i) goto label11;
    _r0.i = 1;
    ((global::com.codename1.ui.html.HTMLTable) _r1_o)._finnerBorderGroups = 0!=_r0.i;
    _r2.i = 1;
    label7:;
    base.setInnerBorderMode((int) _r2.i);
    return;
    label11:;
    _r0.i = 0;
    ((global::com.codename1.ui.html.HTMLTable) _r1_o)._finnerBorderGroups = 0!=_r0.i;
    goto label7;
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable: void setInnerBorderMode(int)]
}

//XMLVM_BEGIN_WRAPPER[com.codename1.ui.html.HTMLTable]
//XMLVM_END_WRAPPER[com.codename1.ui.html.HTMLTable]

} // end of class: HTMLTable

} // end of namespace: com.codename1.ui.html
